[{"authors":null,"categories":null,"content":"","date":1673020800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1673020800,"objectID":"2e560abbe4ac37d6ed1f9d15e59eddb6","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/01-getting-started/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/01-getting-started/","section":"docs","summary":"Setting up GitHub, installing prerequisite software and forking.","tags":null,"title":"Getting Started","type":"book"},{"authors":null,"categories":null,"content":"The folder layout of our repository is extremely important, it determines how our website is compiled and organised. While you do not need to know the purpose of every folder and file in the repository right now, you do need to know where each folder is located and their general purpose.\nMore up-to-date and comprehensive information regarding each folder may be acquired from the Wowchemy documentation.\nThe structure of the repository is as follows:\n├── .github │ ├── workflows | | ├── gh-pages.yml ├── assets │ ├── media │ │ ├── albums | | ├── icons │ ├── scss ├── config │ ├── _default | | ├── config.yaml | | ├── languages.yaml | | ├── menus.yaml | | ├── params.yaml ├── content | ├── about | ├── admin | ├── authors | ├── contact | ├── event | ├── home | ├── people | ├── post | ├── resources | ├── _index.md ├── data | ├── fonts | ├── themes ├── public ├── resources ├── static ├── .gitignore ├── .hugo_build.lock ├── go ├── go.sum ├── LICENSE ├── netlify.toml ├── README.md └── theme.toml .github This folder contains code for continuous integration / continuous deployment (CI/CD). It currently has one file gh-pages.yml which automates the publishing of our website through GitHub Pages whenever a commit is pushed to the main branch.\nassets assets/media This folder stores all of the media assets we use on the website or will refer to internally within the repository.\nassets/media/albums A work-in-progress folder to hold entire albums related to a single event. The aim is to discover how we could implement a gallery widget within the post page.\nassets/media/icons This folder contains all of the icons we use on the website.\nconfig config/config.yaml Hugo configuration settings for the website.\nRefer to the relevant documentation here.\nconfig/languages.yaml File containing the supported languages on our website.\nconfig/menus.yaml File determining the menu tabs on the top right.\nconfig/params.yaml File determining website functionalities.\ncontent content/about Content for the “About Us” page.\ncontent/admin Configuration files for the unused internal content management system (CMS)\ncontent/authors Database of authors for tagging to resources and display on “People” page.\ncontent/contact Content for the “Contact Us” page.\ncontent/event Content for the “Events” page.\ncontent/home Content for the “Home” page.\ncontent/people Content for the “People” page\ncontent/post Content for an unused page.\ncontent/resources Content for the “resources” page.\ncontent/_index.md File that determines our “Hero” page. i.e., the first page everyone lands on.\ndata data/fonts Folder for containing custom fonts (if any).\ndata/themes Folder for dark / light themes used.\npublic Folder automatically created by hugo when deploying the website.\nresources Folder automatically created by hugo when deploying the website.\n","date":1673020800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1673020800,"objectID":"0fe7a9df278a0981d9cfdac5ad60dafe","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/02-folder-organisation/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/02-folder-organisation/","section":"docs","summary":"Layout of our repository","tags":null,"title":"Folder Organisation","type":"book"},{"authors":null,"categories":null,"content":"","date":1673020800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1673020800,"objectID":"cefcc855180aba27d657f336793ff96a","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/03-making-edits/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/03-making-edits/","section":"docs","summary":"Branching, setting up visual studio code, making content-specific edits and hosting a local hugo server.","tags":null,"title":"Making Edits","type":"book"},{"authors":null,"categories":null,"content":"","date":1673020800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1673020800,"objectID":"4cdd37113783e47641dd300543c94e1b","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/psyconnect-documentation/docs/","section":"docs","summary":"","tags":null,"title":"Docs","type":"book"},{"authors":null,"categories":null,"content":"assets/media This folder stores all of the media assets we use on the website or will refer to internally within the repository.\nassets/media/albums A work-in-progress folder to hold entire albums related to a single event. The aim is to discover how we could implement a gallery widget within the post page.\nassets/media/icons This folder contains all of the icons we use on the website.\n","date":1673020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673020800,"objectID":"b3e5249ff3611dec32226839eebfe3ab","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/02-folder-organisation/assets/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/02-folder-organisation/assets/","section":"docs","summary":"assets/media This folder stores all of the media assets we use on the website or will refer to internally within the repository.\nassets/media/albums A work-in-progress folder to hold entire albums related to a single event.","tags":null,"title":"assets","type":"book"},{"authors":null,"categories":null,"content":"You may wish to refer to 17:02 in the first video we mentioned for a quick overview on what branching is.\n❗ Always create a new branch before making any new changes locally, do not commit directly to main. This is a best practice throughout software development.\nHere are the steps to creating a branch in GitHub Desktop:\nOn GitHub Desktop, go to Branch and click New branch. Create a name for your new branch. Try to keep them descriptive and relevant to the edits you would be making. Your current branch should now reflect your chosen name for the new branch. ","date":1673020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673020800,"objectID":"21d5ddf7a232ec207cd047854d973cb0","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/03-making-edits/branching/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/03-making-edits/branching/","section":"docs","summary":"You may wish to refer to 17:02 in the first video we mentioned for a quick overview on what branching is.\n❗ Always create a new branch before making any new changes locally, do not commit directly to main.","tags":null,"title":"Branching","type":"book"},{"authors":null,"categories":null,"content":"You may find the following video useful: Essentially, Git is a version control software (VCS) and GitHub is a website that allows us to host our code online.\nGithub Account This account is required for you to collaborate and interact with our codebase. As all profiles and commits are public, we highly suggest choosing a professional handle and one that allows reviewers to clearly identify you.\nYou may also refer to GitHub’s exisiting guides and documentation.\n","date":1673020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673020800,"objectID":"c2e8ac079640a67a960b5e3af8014152","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/01-getting-started/setting-up-github/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/01-getting-started/setting-up-github/","section":"docs","summary":"You may find the following video useful: Essentially, Git is a version control software (VCS) and GitHub is a website that allows us to host our code online.\nGithub Account This account is required for you to collaborate and interact with our codebase.","tags":null,"title":"Setting Up GitHub","type":"book"},{"authors":null,"categories":null,"content":"config/config.yaml Hugo configuration settings for the website.\nRefer to the relevant documentation here.\nconfig/languages.yaml File containing the supported languages on our website.\nconfig/menus.yaml File determining the menu tabs on the top right.\nconfig/params.yaml File determining website functionalities.\n","date":1673020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673020800,"objectID":"08f171378a9ce555c602e25a0a2f89d1","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/02-folder-organisation/config/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/02-folder-organisation/config/","section":"docs","summary":"config/config.yaml Hugo configuration settings for the website.\nRefer to the relevant documentation here.\nconfig/languages.yaml File containing the supported languages on our website.\nconfig/menus.yaml File determining the menu tabs on the top right.","tags":null,"title":"config","type":"book"},{"authors":null,"categories":null,"content":"You do not need to install both Scoop and Homebrew. Choose the relevant package manager for the operating system you are working on (Windows or MacOS).\n❗ Make sure you install a package manager before the rest of the software to prevent unnecessary headaches.\nScoop for Windows You may refer to Scoop documentation.\nOpen Windows Powershell by typing in the search bar: Copy and paste the following code into the command-line (this is optional if you are not running a remote script for the first time): Set-ExecutionPolicy RemoteSigned -Scope CurrentUser You may receive a prompt alerting you to the change in execution policy, answer yes to this with Y: Copy and paste the following code into the command-line: irm get.scoop.sh | iex Wait for scoop to install For the following software, you may use scoop’s search function to search for the relevant installation commands (in the event that commands listed here are outdated).\nHomebrew for MacOS You may refer to the Homebrew documentation.\nFor the following software, you may use homebrew’s package browser to search for the relevant installation commands (in the event that commands listed here are outdated).\nGit Git is our VCS of choice.\nFor Windows scoop users, simply input the following in powershell:\nscoop install git For MacOS homebrew users, simply input the following into the macOS terminal:\nbrew install git Go A dependency for Hugo-extended.\nGo documentation\nFor Windows scoop users, simply input the following in powershell:\nscoop install go For MacOS homebrew users, simply input the following into the macOS terminal:\nbrew install go Hugo-extended This is the framework used for our website, without which you cannot render your webpage locally.\n❗ We are using hugo-extended, not base hugo.\nFor Windows scoop users, simply input the following in powershell:\nscoop install hugo-extended For MacOS homebrew users, simply input the following into the macOS terminal:\nbrew install hugo After installation, check your version of hugo with (for both Windows and macOS):\nhugo version Ensure that your version of hugo includes +extended after its hash:\nNodejs May be required for building the server on your local computer.\nNodejs documentation\nFor Windows scoop users, simply input the following in powershell:\nscoop install nodejs For MacOS homebrew users, simply input the following into the macOS terminal:\nbrew install node Confirm all packages are successfully installed Use the list function for both package managers to identify all the software you have currently installed.\nFor Windows scoop users, simply input the following in powershell:\nscoop list For MacOS homebrew users, simply input the following into the macOS terminal:\nbrew list Code Editors This refers to software that allow you to edit code, usually with syntax highlighting.\nI (Han Sheng) personally use Visual Studio Code.\nOther options include:\nNotepad++ Git Graphical User Interface (GUI) As our repositiory is hosted on GitHub, GitHub Desktop would be less troublesome to set up.\nOther GUIs such as Sourcetree may require additional user accounts to be created.\n","date":1673020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673020800,"objectID":"9ec13e248dd77316be7918c12cf75df8","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/01-getting-started/prerequisite-software/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/01-getting-started/prerequisite-software/","section":"docs","summary":"You do not need to install both Scoop and Homebrew. Choose the relevant package manager for the operating system you are working on (Windows or MacOS).\n❗ Make sure you install a package manager before the rest of the software to prevent unnecessary headaches.","tags":null,"title":"Installing Prerequisite Software","type":"book"},{"authors":null,"categories":null,"content":" On startup, you will be greeted with the Get Started page. A few options are available, you would want to use Open Folder. This opens the native Windows Explorer. Navigate to the location you saved your local, cloned repository to as specified in Cloning-the-fork-to-local-computer. Ensure that the folder selected is correct, i.e., PsyConnect.github.io.\n(A) This can be achieved by single-clicking the corresponding folder.\n(B) Or, by double-clicking into the folder.\nClick on Select Folder. You should now see the repository’s folder structure.\nVSCode Extensions The base installation of VSCode does not come with functionalities specific to the programming language you use, this prevents unnecessary downloads for features you don’t need. Consequently, you need to install these extensions yourself. Fear not for VSCode has a relatively quick and simple installation process for them.\nSuggested extensions:\nbungcip.better-toml Provides syntax highlighting for .toml (Tom’s Obvious Minimal Language) files rusnasonov.vscode-hugo Allows you to locally build and host a hugo server i.e., locally view your changes to the website without affecting the live website budparr.language-hugo-vscode Provides syntax highlighting and snippets for hugo websites yzhang.markdown-all-in-one Provides auto preview and other shortcuts for .md (Markdown) files DavidAnson.vscode-markdownlint Lint (a static code analysis tool used to flag programming errors, bugs, stylistic errors and suspicious constructs) for .md (Markdown) files natqe.reload Provides a reload button on the bottom right of VSCode. tonybaloney.vscode-pets Provides a virtual pet to keep you company when working in VSCode Here are the steps for installing an extension in VSCode:\nOn the leftmost bar, select the extensions icon. Input the extension ID of the aforementioned extensions. e.g., DavidAnson.vscode-markdownlint Click on the install button. Your install button should now be replaced with a disable and uninstall button. Repeat this process for the remaining extensions\nReload VSCode to ensure changes take effect. If you have installed natqe.reload, there will be a reload button on the bottom right.\n","date":1673020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673020800,"objectID":"cb471bf5f7dddb6e7f046ca239d203dc","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/03-making-edits/setting-up-vscode/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/03-making-edits/setting-up-vscode/","section":"docs","summary":"On startup, you will be greeted with the Get Started page. A few options are available, you would want to use Open Folder. This opens the native Windows Explorer. Navigate to the location you saved your local, cloned repository to as specified in Cloning-the-fork-to-local-computer.","tags":null,"title":"Setting Up Visual Studio Code","type":"book"},{"authors":null,"categories":null,"content":"Creating an event post Navigate to content/event. You will notice that each individual event has their own folder. Right click any existing event folder (e.g., starred-up-psyconnect-movie) and copy them. Right click the parent event folder and paste a copy of the existing event folder. Rename the folder to reflect your event (e.g., november-board-games). ❗ The folder’s name determines the public URL of the page, so ensure that it does not contain anything unprofessional. Also note to follow the convention of using - in place of spaces.\nOpen up the index.md file.\nReplace the existing information. Minimally, the Title, location, address, date, date_end, and publishDate should be filled.\nFor the write-up of the event, place them under the second ---. For the accompanying picture, replace featured.jpg with the image you wish to use. You can replace it with either VSCode’s built-in file explorer OR your operating system’s file explorer. ❗ You must use featured.jpg as the name of the picture, otherwise hugo will not know which picture to use.\nCreating a resource Navigate to content/resources. Repeat steps 2 to 7 with any existing resource folder and its index.md. ❗ For resources, minimally title, authors, date, publishDate, and publication_types must be filled.\nFor the resource itself (e.g., the PDF file), upload it to the same folder with the same name as its folder (e.g., resources/MTH220-summary-sheet contains MTH220-summary-sheet.pdf). This allows hugo to automatically link the pdf or other files to the current resource post. ","date":1673020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673020800,"objectID":"23f379cbd3ac33958e35d92ac6c55c34","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/03-making-edits/content-specific-edits/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/03-making-edits/content-specific-edits/","section":"docs","summary":"Creating an event post Navigate to content/event. You will notice that each individual event has their own folder. Right click any existing event folder (e.g., starred-up-psyconnect-movie) and copy them. Right click the parent event folder and paste a copy of the existing event folder.","tags":null,"title":"Content Specific Edits","type":"book"},{"authors":null,"categories":null,"content":"What is Forking? From the GitHub Docs:\nA fork is a new repository that shares code and visibility settings with the original “upstream” repository.\nEssentially, a fork is your copy of the entire repository. This allows multiple people to develop independently and simultaneously as everyone has their own copy. With this, you can experiment with and make edits to your own copy without affecting our “live” webpage and the main codebase.\nThe belowmentioned steps will guide you in forking our website’s repository to your GitHub account.\n❗ You should have created and logged in to your GitHub account at this stage.\nSteps to Fork the Website Repository Navigate to our website’s repository and click on the Fork button in the top right. Click on the green Create fork button on this window. You should now see your forked copy of the repository at your-username/PsyConnect.github.io forked from PsyConnect/PsyConnect.github.io. Congratulations! You now have your own online copy of the repository. But what if you (1) want to edit your code offline, (2) don’t have an internet connection or (3) want to make multiple changes to different files?\nCloning the Fork to Local Computer GitHub’s online code editor while useful has its limitations, therefore we need to obtain an offline copy of the repository for us to work on it with our installed code editors. However, this is not just a simple downloading of all files, we also want our local copy on our computers to be synchronised with our fork on GitHub. We can achieve this with cloning!\nFeel free to refer to the GitHub Docs for more information on cloning.\nSteps to Clone the Fork Open up GitHub Desktop and log in to your account. You may wish to refer to 2:48 in the first video we mentioned to guide you through set up. Go to File and click Clone repository. Choose the forked repository your-username/PsyConnect.github.io and choose where you wish to save it in your computer under Local path. ","date":1673020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673020800,"objectID":"47a9857360b0c5514c457aa38b75caa3","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/01-getting-started/forking-the-repo/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/01-getting-started/forking-the-repo/","section":"docs","summary":"What is Forking? From the GitHub Docs:\nA fork is a new repository that shares code and visibility settings with the original “upstream” repository.\nEssentially, a fork is your copy of the entire repository.","tags":null,"title":"Forking the Repository","type":"book"},{"authors":null,"categories":null,"content":"Congratulations! You’ve finished editing and can now view the fruits of your labour. In order to check if your code is workable and the possible visual changes on the website, you need to deploy a local webserver hosting your offline copy of our website.\nTo do this on VSCode:\nEnsure all your changes in open editors are saved using the File/Save button on the top left or the Ctrl+S keyboard shortcut. You should see your edited file highlighted with either an M or a U for modified and uploaded respectively. Open up VSCode Terminal with the Terminal tab. A new terminal will show up at the bottom of VSCode. Type in hugo server to deploy the website. The resulting response may be too large for your current window so expand it if you have to. You should receive something similar to the below picture. Following the last line of the response, open up any web browser and type in http://localhost:1313/ (or whatever url the response mentions). You should be able to interact with and view your local changes to the website. Check your changes and ensure that nothing else is unintentionally affected. Use Ctrl+C in the same VSCode terminal to stop your web server and continue making edits if you have to. Redeploy the website locally to check your edits again. Once you are satisfied with your changes, you can now move on to making a commit.\n","date":1673020800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673020800,"objectID":"9d999f30d0af6051400796baead5a468","permalink":"https://ho-han-sheng.github.io/psyconnect-documentation/docs/03-making-edits/hosting-local-hugo-server/","publishdate":"2023-01-07T00:00:00+08:00","relpermalink":"/psyconnect-documentation/docs/03-making-edits/hosting-local-hugo-server/","section":"docs","summary":"Congratulations! You’ve finished editing and can now view the fruits of your labour. In order to check if your code is workable and the possible visual changes on the website, you need to deploy a local webserver hosting your offline copy of our website.","tags":null,"title":"Hosting Local Web Server","type":"book"}]